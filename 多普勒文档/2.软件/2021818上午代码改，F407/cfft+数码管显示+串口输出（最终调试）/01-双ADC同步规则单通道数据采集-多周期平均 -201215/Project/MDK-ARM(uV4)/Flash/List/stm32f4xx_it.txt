; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f4xx_it.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f4xx_it.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\..\..\..\ARM\CMSIS\5.7.0\CMSIS\Include -I..\..\User\LED -I..\..\User\systick -I..\..\User -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_LOOPUNROLL -DARM_MATH_CM4 --omf_browse=.\flash\obj\stm32f4xx_it.crf ..\..\User\bsp_stm32f4xx\stm32f4xx_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;107    */
;;;108    void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;109    {
;;;110      /* 当总线异常时进入死循环 */
;;;111      while (1)
000002  e7fe              B        |L1.2|
;;;112      {
;;;113      }
;;;114    }
;;;115    
                          ENDP


                          AREA ||i.DMA2_Stream0_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA2_Stream0_IRQHandler PROC
;;;178      */
;;;179    void DMA2_Stream0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;180    {
;;;181      /* Test on DMA Stream Transfer Complete interrupt */
;;;182      if(DMA_GetITStatus(DMA2_Stream0, DMA_IT_TCIF0))
000002  4906              LDR      r1,|L2.28|
000004  4806              LDR      r0,|L2.32|
000006  f7fffffe          BL       DMA_GetITStatus
00000a  b130              CBZ      r0,|L2.26|
;;;183      {
;;;184        FLAG_DMA_TC = 1;
00000c  2001              MOVS     r0,#1
00000e  4905              LDR      r1,|L2.36|
000010  7008              STRB     r0,[r1,#0]
;;;185        /* Clear DMA Stream Transfer Complete interrupt pending bit */
;;;186        DMA_ClearITPendingBit(DMA2_Stream0, DMA_IT_TCIF0);  
000012  4902              LDR      r1,|L2.28|
000014  4802              LDR      r0,|L2.32|
000016  f7fffffe          BL       DMA_ClearITPendingBit
                  |L2.26|
;;;187        
;;;188      }
;;;189    }
00001a  bd10              POP      {r4,pc}
;;;190    /***************************** 安富莱电子 www.armfly.com (END OF FILE) *********************************/
                          ENDP

                  |L2.28|
                          DCD      0x10008020
                  |L2.32|
                          DCD      0x40026410
                  |L2.36|
                          DCD      FLAG_DMA_TC

                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;151    */
;;;152    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;153    {
;;;154    }
;;;155    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=2

                  HardFault_Handler PROC
;;;63     */
;;;64     void HardFault_Handler(void)
000000  a109              ADR      r1,|L4.40|
;;;65     {
;;;66     #if 1
;;;67       const char *pError = ERR_INFO;
;;;68       uint8_t i;
;;;69     
;;;70       for (i = 0; i < sizeof(ERR_INFO); i++)
000002  2000              MOVS     r0,#0
000004  e00b              B        |L4.30|
                  |L4.6|
;;;71       {
;;;72          USART1->DR = pError[i];
000006  5c0a              LDRB     r2,[r1,r0]
000008  4b12              LDR      r3,|L4.84|
00000a  809a              STRH     r2,[r3,#4]
;;;73          /* 等待发送结束 */
;;;74          while ((USART1->SR & USART_FLAG_TC) == (uint16_t)RESET);
00000c  bf00              NOP      
                  |L4.14|
00000e  4a11              LDR      r2,|L4.84|
000010  8812              LDRH     r2,[r2,#0]
000012  f0020240          AND      r2,r2,#0x40
000016  2a00              CMP      r2,#0
000018  d0f9              BEQ      |L4.14|
00001a  1c42              ADDS     r2,r0,#1              ;70
00001c  b2d0              UXTB     r0,r2                 ;70
                  |L4.30|
00001e  282a              CMP      r0,#0x2a              ;70
000020  d3f1              BCC      |L4.6|
;;;75       }
;;;76     #endif
;;;77     
;;;78       /* 当硬件失效异常发生时进入死循环 */
;;;79       while (1)
000022  bf00              NOP      
                  |L4.36|
000024  e7fe              B        |L4.36|
;;;80       {
;;;81       }
;;;82     }
;;;83     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
000028  0d0a456e          DCB      "\r\nEnter HardFault_Handler, System Halt.\r\n",0
00002c  74657220
000030  48617264
000034  4661756c
000038  745f4861
00003c  6e646c65
000040  722c2053
000044  79737465
000048  6d204861
00004c  6c742e0d
000050  0a00    
000052  00                DCB      0
000053  00                DCB      0
                  |L4.84|
                          DCD      0x40011000

                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;91     */
;;;92     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L5.2|
;;;93     {
;;;94       /* 当内存管理异常发生时进入死循环 */
;;;95       while (1)
000002  e7fe              B        |L5.2|
;;;96       {
;;;97       }
;;;98     }
;;;99     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;50     */
;;;51     void NMI_Handler(void)
000000  4770              BX       lr
;;;52     {
;;;53     }
;;;54     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;163    */
;;;164    void PendSV_Handler(void)
000000  4770              BX       lr
;;;165    {
;;;166    }
;;;167    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;139    */
;;;140    void SVC_Handler(void)
000000  4770              BX       lr
;;;141    {
;;;142    }
;;;143    
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;123    */
;;;124    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L9.2|
;;;125    {
;;;126      /* 当用法异常时进入死循环 */
;;;127      while (1)
000002  e7fe              B        |L9.2|
;;;128      {
;;;129      }
;;;130    }
;;;131    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  uwRTCAlarmCount
                          DCD      0x00000000
                  FLAG_DMA_TC
000004  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\stm32f4xx_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f4xx_it_c_ee621d14____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_stm32f4xx_it_c_ee621d14____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f4xx_it_c_ee621d14____REVSH|
#line 144
|__asm___14_stm32f4xx_it_c_ee621d14____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f4xx_it_c_ee621d14____RRX|
#line 300
|__asm___14_stm32f4xx_it_c_ee621d14____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
