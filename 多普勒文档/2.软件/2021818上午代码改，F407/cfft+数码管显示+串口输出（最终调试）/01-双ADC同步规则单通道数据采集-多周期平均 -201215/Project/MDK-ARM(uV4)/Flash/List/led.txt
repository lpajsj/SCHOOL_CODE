; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\led.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\..\..\..\ARM\CMSIS\5.7.0\CMSIS\Include -I..\..\User\LED -I..\..\User\systick -I..\..\User -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_LOOPUNROLL -DARM_MATH_CM4 --omf_browse=.\flash\obj\led.crf ..\..\User\LED\led.c]
                          THUMB

                          AREA ||i.LED_GPIO_Config||, CODE, READONLY, ALIGN=2

                  LED_GPIO_Config PROC
;;;8      
;;;9      void LED_GPIO_Config(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;10     {
;;;11     	
;;;12     	//第一步：开GPIO时钟
;;;13     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;14     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC,ENABLE);
00000a  2101              MOVS     r1,#1
00000c  2004              MOVS     r0,#4
00000e  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;15     		
;;;16     	//第二步：定义一个GPIO初始化结构体
;;;17     	GPIO_InitTypeDef GPIO_InitStruct;
;;;18     	
;;;19     	//第三步：配置GPIO初始化结构体成员
;;;20     	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_11 | GPIO_Pin_8 | GPIO_Pin_15;
000012  f44f4009          MOV      r0,#0x8900
000016  9000              STR      r0,[sp,#0]
;;;21     	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
000018  2001              MOVS     r0,#1
00001a  f88d0004          STRB     r0,[sp,#4]
;;;22     	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
00001e  f88d0006          STRB     r0,[sp,#6]
;;;23     	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
000022  f88d0007          STRB     r0,[sp,#7]
;;;24     	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
000026  2003              MOVS     r0,#3
000028  f88d0005          STRB     r0,[sp,#5]
;;;25     	
;;;26     	//只要配置为输出模式，ODR默认为0x00000000默认为拉低 优先于PuPd
;;;27     	
;;;28     	/*第四步：调用GPIO初始化函数，
;;;29     			把配置好的结构体成员写入寄存器*/
;;;30     	GPIO_Init(GPIOA,&GPIO_InitStruct);
00002c  4669              MOV      r1,sp
00002e  4809              LDR      r0,|L1.84|
000030  f7fffffe          BL       GPIO_Init
;;;31     	
;;;32     	
;;;33     	
;;;34     //	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_13;
;;;35     //	GPIO_Init(GPIOC,&GPIO_InitStruct);
;;;36     	
;;;37     	GPIO_SetBits(GPIOA,GPIO_Pin_11);
000034  f44f6100          MOV      r1,#0x800
000038  4806              LDR      r0,|L1.84|
00003a  f7fffffe          BL       GPIO_SetBits
;;;38     	GPIO_SetBits(GPIOA,GPIO_Pin_8);
00003e  f44f7180          MOV      r1,#0x100
000042  4804              LDR      r0,|L1.84|
000044  f7fffffe          BL       GPIO_SetBits
;;;39     	GPIO_SetBits(GPIOA,GPIO_Pin_15);
000048  f44f4100          MOV      r1,#0x8000
00004c  4801              LDR      r0,|L1.84|
00004e  f7fffffe          BL       GPIO_SetBits
;;;40     }
000052  bd1c              POP      {r2-r4,pc}
;;;41     void output(u8 x)
                          ENDP

                  |L1.84|
                          DCD      0x40020000

                          AREA ||i.output||, CODE, READONLY, ALIGN=2

                  output PROC
;;;40     }
;;;41     void output(u8 x)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;42     {
000004  4605              MOV      r5,r0
;;;43     	unsigned char x1,x2,i;
;;;44     	
;;;45     	x1 = SMG[(x&0x0F)];
000006  f005000f          AND      r0,r5,#0xf
00000a  492c              LDR      r1,|L2.188|
00000c  5c0e              LDRB     r6,[r1,r0]
;;;46     	x2 = SMG[ (x>>4) ];
00000e  4608              MOV      r0,r1
000010  eb001025          ADD      r0,r0,r5,ASR #4
000014  7807              LDRB     r7,[r0,#0]
;;;47     	
;;;48     	for(i=0;i<8;i++)
000016  2400              MOVS     r4,#0
000018  e023              B        |L2.98|
                  |L2.26|
;;;49     	{
;;;50     		SH0;
00001a  f44f6100          MOV      r1,#0x800
00001e  4828              LDR      r0,|L2.192|
000020  f7fffffe          BL       GPIO_ResetBits
;;;51     //		delay_us(2);
;;;52     		if(x1&0x80)
000024  f0060080          AND      r0,r6,#0x80
000028  b128              CBZ      r0,|L2.54|
;;;53     		{
;;;54     			DS1;
00002a  f44f4100          MOV      r1,#0x8000
00002e  4824              LDR      r0,|L2.192|
000030  f7fffffe          BL       GPIO_SetBits
000034  e004              B        |L2.64|
                  |L2.54|
;;;55     		}
;;;56     		else
;;;57     		{
;;;58     			DS0;
000036  f44f4100          MOV      r1,#0x8000
00003a  4821              LDR      r0,|L2.192|
00003c  f7fffffe          BL       GPIO_ResetBits
                  |L2.64|
;;;59     		}
;;;60     //		delay_us(2);
;;;61     		x1<<=1;
000040  0670              LSLS     r0,r6,#25
000042  0e06              LSRS     r6,r0,#24
;;;62     		SH1;
000044  f44f6100          MOV      r1,#0x800
000048  481d              LDR      r0,|L2.192|
00004a  f7fffffe          BL       GPIO_SetBits
;;;63     		delay_us(1);
00004e  2001              MOVS     r0,#1
000050  f7fffffe          BL       delay_us
;;;64     		SH0;
000054  f44f6100          MOV      r1,#0x800
000058  4819              LDR      r0,|L2.192|
00005a  f7fffffe          BL       GPIO_ResetBits
00005e  1c60              ADDS     r0,r4,#1              ;48
000060  b2c4              UXTB     r4,r0                 ;48
                  |L2.98|
000062  2c08              CMP      r4,#8                 ;48
000064  dbd9              BLT      |L2.26|
;;;65     	}
;;;66     //-------------------------------------------------	
;;;67     	for(i=0;i<8;i++)
000066  2400              MOVS     r4,#0
000068  e023              B        |L2.178|
                  |L2.106|
;;;68     	{
;;;69     		SH0;
00006a  f44f6100          MOV      r1,#0x800
00006e  4814              LDR      r0,|L2.192|
000070  f7fffffe          BL       GPIO_ResetBits
;;;70     //		delay_us(2);
;;;71     		if(x2&0x80)
000074  f0070080          AND      r0,r7,#0x80
000078  b128              CBZ      r0,|L2.134|
;;;72     		{
;;;73     			DS1;
00007a  f44f4100          MOV      r1,#0x8000
00007e  4810              LDR      r0,|L2.192|
000080  f7fffffe          BL       GPIO_SetBits
000084  e004              B        |L2.144|
                  |L2.134|
;;;74     		}
;;;75     		else
;;;76     		{
;;;77     			DS0;
000086  f44f4100          MOV      r1,#0x8000
00008a  480d              LDR      r0,|L2.192|
00008c  f7fffffe          BL       GPIO_ResetBits
                  |L2.144|
;;;78     		}
;;;79     //		delay_us(2);
;;;80     		x2<<=1;
000090  0678              LSLS     r0,r7,#25
000092  0e07              LSRS     r7,r0,#24
;;;81     		SH1;
000094  f44f6100          MOV      r1,#0x800
000098  4809              LDR      r0,|L2.192|
00009a  f7fffffe          BL       GPIO_SetBits
;;;82     		delay_us(1);
00009e  2001              MOVS     r0,#1
0000a0  f7fffffe          BL       delay_us
;;;83     		SH0;
0000a4  f44f6100          MOV      r1,#0x800
0000a8  4805              LDR      r0,|L2.192|
0000aa  f7fffffe          BL       GPIO_ResetBits
0000ae  1c60              ADDS     r0,r4,#1              ;67
0000b0  b2c4              UXTB     r4,r0                 ;67
                  |L2.178|
0000b2  2c08              CMP      r4,#8                 ;67
0000b4  dbd9              BLT      |L2.106|
;;;84     	}
;;;85     	
;;;86     	
;;;87     }
0000b6  e8bd81f0          POP      {r4-r8,pc}
;;;88     //void output(u8 x)
                          ENDP

0000ba  0000              DCW      0x0000
                  |L2.188|
                          DCD      ||SMG||
                  |L2.192|
                          DCD      0x40020000

                          AREA ||i.output_point||, CODE, READONLY, ALIGN=2

                  output_point PROC
;;;180    //}
;;;181    void output_point(u8 x)
000000  b570              PUSH     {r4-r6,lr}
;;;182    {
000002  4606              MOV      r6,r0
;;;183    	unsigned char x1,x2;
;;;184    	
;;;185    	x1 = SMGpoint[ (x&0x0F) ];
000004  f006000f          AND      r0,r6,#0xf
000008  49d3              LDR      r1,|L3.856|
00000a  5c0c              LDRB     r4,[r1,r0]
;;;186    	x2 = SMG[ (x>>4) ];
00000c  48d3              LDR      r0,|L3.860|
00000e  eb001026          ADD      r0,r0,r6,ASR #4
000012  7805              LDRB     r5,[r0,#0]
;;;187    	
;;;188    	SH0;
000014  f44f6100          MOV      r1,#0x800
000018  48d1              LDR      r0,|L3.864|
00001a  f7fffffe          BL       GPIO_ResetBits
;;;189    	if( (x1&0x80) == 0)	{DS0;}
00001e  f0040080          AND      r0,r4,#0x80
000022  b928              CBNZ     r0,|L3.48|
000024  f44f4100          MOV      r1,#0x8000
000028  48cd              LDR      r0,|L3.864|
00002a  f7fffffe          BL       GPIO_ResetBits
00002e  e004              B        |L3.58|
                  |L3.48|
;;;190    		else {DS1;}	
000030  f44f4100          MOV      r1,#0x8000
000034  48ca              LDR      r0,|L3.864|
000036  f7fffffe          BL       GPIO_SetBits
                  |L3.58|
;;;191    	SH1;
00003a  f44f6100          MOV      r1,#0x800
00003e  48c8              LDR      r0,|L3.864|
000040  f7fffffe          BL       GPIO_SetBits
;;;192    		
;;;193    	x1<<=1;	
000044  0660              LSLS     r0,r4,#25
000046  0e04              LSRS     r4,r0,#24
;;;194    	SH0;
000048  f44f6100          MOV      r1,#0x800
00004c  48c4              LDR      r0,|L3.864|
00004e  f7fffffe          BL       GPIO_ResetBits
;;;195    	if( (x1&0x80) == 0)	{DS0;}
000052  f0040080          AND      r0,r4,#0x80
000056  b928              CBNZ     r0,|L3.100|
000058  f44f4100          MOV      r1,#0x8000
00005c  48c0              LDR      r0,|L3.864|
00005e  f7fffffe          BL       GPIO_ResetBits
000062  e004              B        |L3.110|
                  |L3.100|
;;;196    		else {DS1;}	
000064  f44f4100          MOV      r1,#0x8000
000068  48bd              LDR      r0,|L3.864|
00006a  f7fffffe          BL       GPIO_SetBits
                  |L3.110|
;;;197    	SH1;
00006e  f44f6100          MOV      r1,#0x800
000072  48bb              LDR      r0,|L3.864|
000074  f7fffffe          BL       GPIO_SetBits
;;;198    	x1<<=1;	
000078  0660              LSLS     r0,r4,#25
00007a  0e04              LSRS     r4,r0,#24
;;;199    	SH0;
00007c  f44f6100          MOV      r1,#0x800
000080  48b7              LDR      r0,|L3.864|
000082  f7fffffe          BL       GPIO_ResetBits
;;;200    	if( (x1&0x80) == 0)	{DS0;}
000086  f0040080          AND      r0,r4,#0x80
00008a  b928              CBNZ     r0,|L3.152|
00008c  f44f4100          MOV      r1,#0x8000
000090  48b3              LDR      r0,|L3.864|
000092  f7fffffe          BL       GPIO_ResetBits
000096  e004              B        |L3.162|
                  |L3.152|
;;;201    		else {DS1;}	
000098  f44f4100          MOV      r1,#0x8000
00009c  48b0              LDR      r0,|L3.864|
00009e  f7fffffe          BL       GPIO_SetBits
                  |L3.162|
;;;202    	SH1;
0000a2  f44f6100          MOV      r1,#0x800
0000a6  48ae              LDR      r0,|L3.864|
0000a8  f7fffffe          BL       GPIO_SetBits
;;;203    	x1<<=1;	
0000ac  0660              LSLS     r0,r4,#25
0000ae  0e04              LSRS     r4,r0,#24
;;;204    	SH0;
0000b0  f44f6100          MOV      r1,#0x800
0000b4  48aa              LDR      r0,|L3.864|
0000b6  f7fffffe          BL       GPIO_ResetBits
;;;205    	if( (x1&0x80) == 0)	{DS0;}
0000ba  f0040080          AND      r0,r4,#0x80
0000be  b928              CBNZ     r0,|L3.204|
0000c0  f44f4100          MOV      r1,#0x8000
0000c4  48a6              LDR      r0,|L3.864|
0000c6  f7fffffe          BL       GPIO_ResetBits
0000ca  e004              B        |L3.214|
                  |L3.204|
;;;206    		else {DS1;} 
0000cc  f44f4100          MOV      r1,#0x8000
0000d0  48a3              LDR      r0,|L3.864|
0000d2  f7fffffe          BL       GPIO_SetBits
                  |L3.214|
;;;207    	SH1;
0000d6  f44f6100          MOV      r1,#0x800
0000da  48a1              LDR      r0,|L3.864|
0000dc  f7fffffe          BL       GPIO_SetBits
;;;208    	x1<<=1;	
0000e0  0660              LSLS     r0,r4,#25
0000e2  0e04              LSRS     r4,r0,#24
;;;209    	SH0;
0000e4  f44f6100          MOV      r1,#0x800
0000e8  489d              LDR      r0,|L3.864|
0000ea  f7fffffe          BL       GPIO_ResetBits
;;;210    	if( (x1&0x80) == 0)	{DS0;}
0000ee  f0040080          AND      r0,r4,#0x80
0000f2  b928              CBNZ     r0,|L3.256|
0000f4  f44f4100          MOV      r1,#0x8000
0000f8  4899              LDR      r0,|L3.864|
0000fa  f7fffffe          BL       GPIO_ResetBits
0000fe  e004              B        |L3.266|
                  |L3.256|
;;;211    		else {DS1;} 
000100  f44f4100          MOV      r1,#0x8000
000104  4896              LDR      r0,|L3.864|
000106  f7fffffe          BL       GPIO_SetBits
                  |L3.266|
;;;212    	SH1;
00010a  f44f6100          MOV      r1,#0x800
00010e  4894              LDR      r0,|L3.864|
000110  f7fffffe          BL       GPIO_SetBits
;;;213    	x1<<=1;	
000114  0660              LSLS     r0,r4,#25
000116  0e04              LSRS     r4,r0,#24
;;;214    	SH0;
000118  f44f6100          MOV      r1,#0x800
00011c  4890              LDR      r0,|L3.864|
00011e  f7fffffe          BL       GPIO_ResetBits
;;;215    	if( (x1&0x80) == 0)	{DS0;}
000122  f0040080          AND      r0,r4,#0x80
000126  b928              CBNZ     r0,|L3.308|
000128  f44f4100          MOV      r1,#0x8000
00012c  488c              LDR      r0,|L3.864|
00012e  f7fffffe          BL       GPIO_ResetBits
000132  e004              B        |L3.318|
                  |L3.308|
;;;216    		else {DS1;} 
000134  f44f4100          MOV      r1,#0x8000
000138  4889              LDR      r0,|L3.864|
00013a  f7fffffe          BL       GPIO_SetBits
                  |L3.318|
;;;217    	SH1;
00013e  f44f6100          MOV      r1,#0x800
000142  4887              LDR      r0,|L3.864|
000144  f7fffffe          BL       GPIO_SetBits
;;;218    	x1<<=1;	
000148  0660              LSLS     r0,r4,#25
00014a  0e04              LSRS     r4,r0,#24
;;;219    	SH0;
00014c  f44f6100          MOV      r1,#0x800
000150  4883              LDR      r0,|L3.864|
000152  f7fffffe          BL       GPIO_ResetBits
;;;220    	if( (x1&0x80) == 0)	{DS0;}
000156  f0040080          AND      r0,r4,#0x80
00015a  b928              CBNZ     r0,|L3.360|
00015c  f44f4100          MOV      r1,#0x8000
000160  487f              LDR      r0,|L3.864|
000162  f7fffffe          BL       GPIO_ResetBits
000166  e004              B        |L3.370|
                  |L3.360|
;;;221    		else {DS1;} 
000168  f44f4100          MOV      r1,#0x8000
00016c  487c              LDR      r0,|L3.864|
00016e  f7fffffe          BL       GPIO_SetBits
                  |L3.370|
;;;222    	SH1;
000172  f44f6100          MOV      r1,#0x800
000176  487a              LDR      r0,|L3.864|
000178  f7fffffe          BL       GPIO_SetBits
;;;223    	x1<<=1;	
00017c  0660              LSLS     r0,r4,#25
00017e  0e04              LSRS     r4,r0,#24
;;;224    	SH0;
000180  f44f6100          MOV      r1,#0x800
000184  4876              LDR      r0,|L3.864|
000186  f7fffffe          BL       GPIO_ResetBits
;;;225    	if( (x1&0x80) == 0)	{DS0;}
00018a  f0040080          AND      r0,r4,#0x80
00018e  b928              CBNZ     r0,|L3.412|
000190  f44f4100          MOV      r1,#0x8000
000194  4872              LDR      r0,|L3.864|
000196  f7fffffe          BL       GPIO_ResetBits
00019a  e004              B        |L3.422|
                  |L3.412|
;;;226    		else {DS1;} 
00019c  f44f4100          MOV      r1,#0x8000
0001a0  486f              LDR      r0,|L3.864|
0001a2  f7fffffe          BL       GPIO_SetBits
                  |L3.422|
;;;227    	SH1;
0001a6  f44f6100          MOV      r1,#0x800
0001aa  486d              LDR      r0,|L3.864|
0001ac  f7fffffe          BL       GPIO_SetBits
;;;228    //-------------------------------------------------	
;;;229    	SH0;
0001b0  f44f6100          MOV      r1,#0x800
0001b4  486a              LDR      r0,|L3.864|
0001b6  f7fffffe          BL       GPIO_ResetBits
;;;230    	if( (x2&0x80) == 0)	{DS0;}
0001ba  f0050080          AND      r0,r5,#0x80
0001be  b928              CBNZ     r0,|L3.460|
0001c0  f44f4100          MOV      r1,#0x8000
0001c4  4866              LDR      r0,|L3.864|
0001c6  f7fffffe          BL       GPIO_ResetBits
0001ca  e004              B        |L3.470|
                  |L3.460|
;;;231    		else {DS1;} 
0001cc  f44f4100          MOV      r1,#0x8000
0001d0  4863              LDR      r0,|L3.864|
0001d2  f7fffffe          BL       GPIO_SetBits
                  |L3.470|
;;;232    	SH1;
0001d6  f44f6100          MOV      r1,#0x800
0001da  4861              LDR      r0,|L3.864|
0001dc  f7fffffe          BL       GPIO_SetBits
;;;233    	x2<<=1;	
0001e0  0668              LSLS     r0,r5,#25
0001e2  0e05              LSRS     r5,r0,#24
;;;234    	SH0;
0001e4  f44f6100          MOV      r1,#0x800
0001e8  485d              LDR      r0,|L3.864|
0001ea  f7fffffe          BL       GPIO_ResetBits
;;;235    	if( (x2&0x80) == 0)	{DS0;}
0001ee  f0050080          AND      r0,r5,#0x80
0001f2  b928              CBNZ     r0,|L3.512|
0001f4  f44f4100          MOV      r1,#0x8000
0001f8  4859              LDR      r0,|L3.864|
0001fa  f7fffffe          BL       GPIO_ResetBits
0001fe  e004              B        |L3.522|
                  |L3.512|
;;;236    		else {DS1;} 
000200  f44f4100          MOV      r1,#0x8000
000204  4856              LDR      r0,|L3.864|
000206  f7fffffe          BL       GPIO_SetBits
                  |L3.522|
;;;237    	SH1;
00020a  f44f6100          MOV      r1,#0x800
00020e  4854              LDR      r0,|L3.864|
000210  f7fffffe          BL       GPIO_SetBits
;;;238    	x2<<=1;	
000214  0668              LSLS     r0,r5,#25
000216  0e05              LSRS     r5,r0,#24
;;;239    	SH0;
000218  f44f6100          MOV      r1,#0x800
00021c  4850              LDR      r0,|L3.864|
00021e  f7fffffe          BL       GPIO_ResetBits
;;;240    	if( (x2&0x80) == 0)	{DS0;}
000222  f0050080          AND      r0,r5,#0x80
000226  b928              CBNZ     r0,|L3.564|
000228  f44f4100          MOV      r1,#0x8000
00022c  484c              LDR      r0,|L3.864|
00022e  f7fffffe          BL       GPIO_ResetBits
000232  e004              B        |L3.574|
                  |L3.564|
;;;241    		else {DS1;} 
000234  f44f4100          MOV      r1,#0x8000
000238  4849              LDR      r0,|L3.864|
00023a  f7fffffe          BL       GPIO_SetBits
                  |L3.574|
;;;242    	SH1;
00023e  f44f6100          MOV      r1,#0x800
000242  4847              LDR      r0,|L3.864|
000244  f7fffffe          BL       GPIO_SetBits
;;;243    	x2<<=1;	
000248  0668              LSLS     r0,r5,#25
00024a  0e05              LSRS     r5,r0,#24
;;;244    	SH0;
00024c  f44f6100          MOV      r1,#0x800
000250  4843              LDR      r0,|L3.864|
000252  f7fffffe          BL       GPIO_ResetBits
;;;245    	if( (x2&0x80) == 0)	{DS0;}
000256  f0050080          AND      r0,r5,#0x80
00025a  b928              CBNZ     r0,|L3.616|
00025c  f44f4100          MOV      r1,#0x8000
000260  483f              LDR      r0,|L3.864|
000262  f7fffffe          BL       GPIO_ResetBits
000266  e004              B        |L3.626|
                  |L3.616|
;;;246    		else {DS1;} 
000268  f44f4100          MOV      r1,#0x8000
00026c  483c              LDR      r0,|L3.864|
00026e  f7fffffe          BL       GPIO_SetBits
                  |L3.626|
;;;247    	SH1;
000272  f44f6100          MOV      r1,#0x800
000276  483a              LDR      r0,|L3.864|
000278  f7fffffe          BL       GPIO_SetBits
;;;248    	x2<<=1;	
00027c  0668              LSLS     r0,r5,#25
00027e  0e05              LSRS     r5,r0,#24
;;;249    	SH0;
000280  f44f6100          MOV      r1,#0x800
000284  4836              LDR      r0,|L3.864|
000286  f7fffffe          BL       GPIO_ResetBits
;;;250    	if( (x2&0x80) == 0)	{DS0;}
00028a  f0050080          AND      r0,r5,#0x80
00028e  b928              CBNZ     r0,|L3.668|
000290  f44f4100          MOV      r1,#0x8000
000294  4832              LDR      r0,|L3.864|
000296  f7fffffe          BL       GPIO_ResetBits
00029a  e004              B        |L3.678|
                  |L3.668|
;;;251    		else {DS1;} 
00029c  f44f4100          MOV      r1,#0x8000
0002a0  482f              LDR      r0,|L3.864|
0002a2  f7fffffe          BL       GPIO_SetBits
                  |L3.678|
;;;252    	SH1;
0002a6  f44f6100          MOV      r1,#0x800
0002aa  482d              LDR      r0,|L3.864|
0002ac  f7fffffe          BL       GPIO_SetBits
;;;253    	x2<<=1;	
0002b0  0668              LSLS     r0,r5,#25
0002b2  0e05              LSRS     r5,r0,#24
;;;254    	SH0;
0002b4  f44f6100          MOV      r1,#0x800
0002b8  4829              LDR      r0,|L3.864|
0002ba  f7fffffe          BL       GPIO_ResetBits
;;;255    	if( (x2&0x80) == 0)	{DS0;}
0002be  f0050080          AND      r0,r5,#0x80
0002c2  b928              CBNZ     r0,|L3.720|
0002c4  f44f4100          MOV      r1,#0x8000
0002c8  4825              LDR      r0,|L3.864|
0002ca  f7fffffe          BL       GPIO_ResetBits
0002ce  e004              B        |L3.730|
                  |L3.720|
;;;256    		else {DS1;} 
0002d0  f44f4100          MOV      r1,#0x8000
0002d4  4822              LDR      r0,|L3.864|
0002d6  f7fffffe          BL       GPIO_SetBits
                  |L3.730|
;;;257    	SH1;
0002da  f44f6100          MOV      r1,#0x800
0002de  4820              LDR      r0,|L3.864|
0002e0  f7fffffe          BL       GPIO_SetBits
;;;258    	x2<<=1;	
0002e4  0668              LSLS     r0,r5,#25
0002e6  0e05              LSRS     r5,r0,#24
;;;259    	SH0;
0002e8  f44f6100          MOV      r1,#0x800
0002ec  481c              LDR      r0,|L3.864|
0002ee  f7fffffe          BL       GPIO_ResetBits
;;;260    	if( (x2&0x80) == 0)	{DS0;}
0002f2  f0050080          AND      r0,r5,#0x80
0002f6  b928              CBNZ     r0,|L3.772|
0002f8  f44f4100          MOV      r1,#0x8000
0002fc  4818              LDR      r0,|L3.864|
0002fe  f7fffffe          BL       GPIO_ResetBits
000302  e004              B        |L3.782|
                  |L3.772|
;;;261    		else {DS1;} 
000304  f44f4100          MOV      r1,#0x8000
000308  4815              LDR      r0,|L3.864|
00030a  f7fffffe          BL       GPIO_SetBits
                  |L3.782|
;;;262    	SH1;
00030e  f44f6100          MOV      r1,#0x800
000312  4813              LDR      r0,|L3.864|
000314  f7fffffe          BL       GPIO_SetBits
;;;263    	x2<<=1;	
000318  0668              LSLS     r0,r5,#25
00031a  0e05              LSRS     r5,r0,#24
;;;264    	SH0;
00031c  f44f6100          MOV      r1,#0x800
000320  480f              LDR      r0,|L3.864|
000322  f7fffffe          BL       GPIO_ResetBits
;;;265    	if( (x2&0x80) == 0)	{DS0;}
000326  f0050080          AND      r0,r5,#0x80
00032a  b928              CBNZ     r0,|L3.824|
00032c  f44f4100          MOV      r1,#0x8000
000330  480b              LDR      r0,|L3.864|
000332  f7fffffe          BL       GPIO_ResetBits
000336  e004              B        |L3.834|
                  |L3.824|
;;;266    		else {DS1;} 
000338  f44f4100          MOV      r1,#0x8000
00033c  4808              LDR      r0,|L3.864|
00033e  f7fffffe          BL       GPIO_SetBits
                  |L3.834|
;;;267    	SH1;	
000342  f44f6100          MOV      r1,#0x800
000346  4806              LDR      r0,|L3.864|
000348  f7fffffe          BL       GPIO_SetBits
;;;268    	SH0;
00034c  f44f6100          MOV      r1,#0x800
000350  4803              LDR      r0,|L3.864|
000352  f7fffffe          BL       GPIO_ResetBits
;;;269    	
;;;270    	
;;;271    }
000356  bd70              POP      {r4-r6,pc}
;;;272    
                          ENDP

                  |L3.856|
                          DCD      SMGpoint
                  |L3.860|
                          DCD      ||SMG||
                  |L3.864|
                          DCD      0x40020000

                          AREA ||.data||, DATA, ALIGN=0

                  ||SMG||
000000  82ee0746          DCB      0x82,0xee,0x07,0x46
000004  6a5212e6          DCB      0x6a,0x52,0x12,0xe6
000008  0242ff7d          DCB      0x02,0x42,0xff,0x7d
00000c  22029382          DCB      0x22,0x02,0x93,0x82
000010  13332a9b          DCB      0x13,0x33,0x2a,0x9b
000014  2a23              DCB      0x2a,0x23
                  SMGpoint
000016  20b5              DCB      0x20,0xb5
000018  50118503          DCB      0x50,0x11,0x85,0x03
00001c  02b10001          DCB      0x02,0xb1,0x00,0x01

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\LED\\led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_led_c_SMG____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_led_c_SMG____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_led_c_SMG____REVSH|
#line 144
|__asm___5_led_c_SMG____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_led_c_SMG____RRX|
#line 300
|__asm___5_led_c_SMG____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
